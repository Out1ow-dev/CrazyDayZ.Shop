@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppIdentityUser > SignInManager
@inject UserManager<AppIdentityUser > UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        // Получаем текущего пользователя
        var currentUser = await UserManager.GetUserAsync(User);
        var Balance = currentUser?.Balance; 

        <li class="nav-item">
            <a class="nav-link" href="#" id="walletButton">@Balance RUB</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Профиль</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light">Выйти</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-item text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
